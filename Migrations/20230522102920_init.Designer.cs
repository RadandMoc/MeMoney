// <auto-generated />
using System;
using MeMoney.DBases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeMoney.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230522102920_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeMoney.DBases.Company", b =>
                {
                    b.Property<int>("IdCompany1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompany1"));

                    b.Property<string>("CompanyName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KRS1")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIP1")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Person1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCompany1");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("MeMoney.DBases.Mem", b =>
                {
                    b.Property<int>("IdMem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMem"));

                    b.Property<string>("MemLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMem");

                    b.ToTable("Mem");
                });

            modelBuilder.Entity("MeMoney.DBases.MemAuthor", b =>
                {
                    b.Property<int>("IdMemAuthor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMemAuthor"));

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMemAuthor");

                    b.ToTable("MemAuthor");
                });

            modelBuilder.Entity("MeMoney.DBases.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AdditionalSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyIdCompany1")
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IfPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximalSalary1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("MeMoney.DBases.OfferMem", b =>
                {
                    b.Property<int>("MemId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("OfferMemId")
                        .HasColumnType("int");

                    b.HasKey("MemId", "OfferId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferMem");
                });

            modelBuilder.Entity("MeMoney.DBases.OfferMemAuthor", b =>
                {
                    b.Property<int>("IdMemAuthor")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("OfferId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("OfferMemAuthorId")
                        .HasColumnType("int");

                    b.HasKey("IdMemAuthor", "OfferId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferMemAuthor");
                });

            modelBuilder.Entity("MeMoney.DBases.OfferMem", b =>
                {
                    b.HasOne("MeMoney.DBases.Mem", "Mem")
                        .WithMany("MemOffers")
                        .HasForeignKey("MemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeMoney.DBases.Offer", "Offer")
                        .WithMany("MemOffers")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mem");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("MeMoney.DBases.OfferMemAuthor", b =>
                {
                    b.HasOne("MeMoney.DBases.MemAuthor", "MemAuthor")
                        .WithMany("OffersMemAuthor")
                        .HasForeignKey("IdMemAuthor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeMoney.DBases.Offer", "Offer")
                        .WithMany("OffersMemAuthor")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MemAuthor");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("MeMoney.DBases.Mem", b =>
                {
                    b.Navigation("MemOffers");
                });

            modelBuilder.Entity("MeMoney.DBases.MemAuthor", b =>
                {
                    b.Navigation("OffersMemAuthor");
                });

            modelBuilder.Entity("MeMoney.DBases.Offer", b =>
                {
                    b.Navigation("MemOffers");

                    b.Navigation("OffersMemAuthor");
                });
#pragma warning restore 612, 618
        }
    }
}
